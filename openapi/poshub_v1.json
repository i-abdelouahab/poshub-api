{
  "openapi": "3.1.0",
  "info": {
    "title": "Poshub API",
    "description": "API for Poshub Point of Sale System",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Local development"
    },
    {
      "url": "https://api.staging.poshub.com",
      "description": "Staging environment (Not Running)"
    },
    {
      "url": "https://api.poshub.com",
      "description": "Production environment (Not Running)"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "basics",
          "health"
        ],
        "summary": "Health",
        "description": "Health check endpoint.",
        "operationId": "health_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/orders/": {
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Create Order",
        "description": "Create a new order.\nRequires 'orders:write' scope in the JWT token.\n\nError Responses:\n- 401: Invalid or missing authentication token\n- 403: Authenticated but missing required scope",
        "operationId": "create_order_orders__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/orders/all": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Get Orders",
        "operationId": "get_orders_orders_all_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OrderOut"
                  },
                  "type": "array",
                  "title": "Response Get Orders Orders All Get"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Get Order",
        "operationId": "get_order_orders__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/external-demo": {
      "get": {
        "tags": [
          "external"
        ],
        "summary": "Call External",
        "operationId": "call_external_external_demo_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "OrderIn": {
        "properties": {
          "nom_client": {
            "type": "string",
            "maxLength": 128,
            "title": "Nom Client"
          },
          "montant": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Montant"
          },
          "devise": {
            "type": "string",
            "pattern": "^[A-Z]{3}$",
            "title": "Devise"
          }
        },
        "type": "object",
        "required": [
          "nom_client",
          "montant",
          "devise"
        ],
        "title": "OrderIn"
      },
      "OrderOut": {
        "properties": {
          "order": {
            "type": "string",
            "format": "uuid",
            "title": "Order"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "nom_client": {
            "type": "string",
            "title": "Nom Client"
          },
          "montant": {
            "type": "number",
            "title": "Montant"
          },
          "devise": {
            "type": "string",
            "title": "Devise"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          }
        },
        "type": "object",
        "required": [
          "order",
          "created_at",
          "nom_client",
          "montant",
          "devise",
          "created_by"
        ],
        "title": "OrderOut"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token obtained from the authentication endpoint"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}